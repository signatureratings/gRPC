# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos.Employees import employees_pb2 as protos_dot_Employees_dot_employees__pb2


class EmployeeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEmployee = channel.unary_unary(
                '/ruparking.employee.EmployeeService/GetEmployee',
                request_serializer=protos_dot_Employees_dot_employees__pb2.EmployeeID.SerializeToString,
                response_deserializer=protos_dot_Employees_dot_employees__pb2.Employee.FromString,
                )
        self.GetAllEmployees = channel.unary_unary(
                '/ruparking.employee.EmployeeService/GetAllEmployees',
                request_serializer=protos_dot_Employees_dot_employees__pb2.Empty.SerializeToString,
                response_deserializer=protos_dot_Employees_dot_employees__pb2.Employees.FromString,
                )
        self.AddEmployee = channel.unary_unary(
                '/ruparking.employee.EmployeeService/AddEmployee',
                request_serializer=protos_dot_Employees_dot_employees__pb2.Employee.SerializeToString,
                response_deserializer=protos_dot_Employees_dot_employees__pb2.Employee.FromString,
                )


class EmployeeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEmployee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllEmployees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEmployee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmployeeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployee,
                    request_deserializer=protos_dot_Employees_dot_employees__pb2.EmployeeID.FromString,
                    response_serializer=protos_dot_Employees_dot_employees__pb2.Employee.SerializeToString,
            ),
            'GetAllEmployees': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllEmployees,
                    request_deserializer=protos_dot_Employees_dot_employees__pb2.Empty.FromString,
                    response_serializer=protos_dot_Employees_dot_employees__pb2.Employees.SerializeToString,
            ),
            'AddEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEmployee,
                    request_deserializer=protos_dot_Employees_dot_employees__pb2.Employee.FromString,
                    response_serializer=protos_dot_Employees_dot_employees__pb2.Employee.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ruparking.employee.EmployeeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmployeeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ruparking.employee.EmployeeService/GetEmployee',
            protos_dot_Employees_dot_employees__pb2.EmployeeID.SerializeToString,
            protos_dot_Employees_dot_employees__pb2.Employee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllEmployees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ruparking.employee.EmployeeService/GetAllEmployees',
            protos_dot_Employees_dot_employees__pb2.Empty.SerializeToString,
            protos_dot_Employees_dot_employees__pb2.Employees.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ruparking.employee.EmployeeService/AddEmployee',
            protos_dot_Employees_dot_employees__pb2.Employee.SerializeToString,
            protos_dot_Employees_dot_employees__pb2.Employee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
